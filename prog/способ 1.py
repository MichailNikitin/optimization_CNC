import math as m

sp = pripd_pak = dpak = tp_ob = []
M_PI = 3.14159265358979323846

def main():
    print("ввод данных по заготовке и детали")
    dz_max = 50.3  # Максимальный диаметр заготовки, мм
    tdz = 0.039  # допуск диаметра заготовки, мм
    dz_min = dz_max - tdz  # минимальный диаметр заготовки, мм
    dd_max = 50.00  # максимальный диаметр детали, мм
    rzag_max = dz_max / 2  # максимальный радиус заготовки, мм
    td = 0.016  # допуск диаметра детали, мм
    dd_min = dd_max - td  # минимальный диаметр детали, мм
    pripd_max = dz_max - 0.5 * (dd_max + dd_min)  # припуск на диаметр максимальный, мм
    pripd_min = dz_min - 0.5 * (dd_max + dd_min)  # припуск на диаметр минимальный, мм
    etgb = 9.47  # ei * tg betta см.формулу
    b = 10.0  # длина шлифуемой поверхности в мм
    sigma = 180.0  # интенсивность напряжений, кг / мм2
    print("ввод исходных данных по шлифовальному кругу")
    stzat = 0.01  # степень затупления круга
    dk = 300  # диаметр круга, мм
    print(f"dk={dk}	   stzat={stzat}")
    print("ввод исходных данных по станку")
    podatl = 0.003  # Податливость технологической системы, мм / кг
    vk = 30000. * 60.0  # окружная скорость вращения круга, мм / мин
    nd = 300.0  # частота вращения детали, об / мин
    print(f"nd={nd}     vk={vk}")
    print("ввод исходных данных по циклу")
    time_ob = 1 / nd  # время одного оборота заготовки, мин
    zmax = 2  # количество ступеней цикла
    sp.append(3.0)  # программная минутная подача на первой ступени цикла, мм / мин
    sp.append(0.1)  # программная минутная подача на второй ступени цикла, мм / мин
    tp_ob.append(sp[0] / nd)  # программная на оборот первой ступени цикла, мм / об
    tp_ob.append(sp[1] / nd)  # программная на оборот второй ступени цикла, мм / об
    print("ввод исходных данных по ПАКу")
    pripd_pak.append(0.85 * pripd_max)  # припуск на диаметр на первой ступени цикла, мм
    pripd_pak.append(pripd_max - pripd_pak[0])  # припуск на диаметр на второй ступени цикла, мм
    dpak.append(dz_max - pripd_pak[0])   # диаметр ПАК переключения подачи после первой ступени
    dpak.append(0.5 * (dd_max + dd_min))   # диаметр ПАК переключения подачи после второй ступени(конец цикла)
    print(f"nd={nd}  zmax={zmax}  sp[0]={sp[0]}  sp[1]={sp[1]}  tp_ob[0]={tp_ob[0]}  tp_ob[1]={tp_ob[1]}")
    print(f"pripd_max={pripd_max}  pripd_pak[0]={pripd_pak[0]}  pripd_pak[1]={pripd_pak[1]}")
    print(f"dpak[0]={dpak[0]}  dpak[1]={dpak[1]}")
    input()
    print("расчет коэффициентов")
    k3 = M_PI * dz_max * b * sigma * etgb * nd / vk  # первый коф - т в формуле силы Ру через tф
    k4 = stzat * sigma * b * m.sqrt(dz_max * dk / (dz_max + dk)) / 3  # второй коф - т в формуле силы Ру через tф
    с1_tf_ob = 0.5 * podatl * k4 / (1 + k3 * podatl)  # коэф в формуле tf_ob
    print(f"k3={k3}  k4={k4}")


if __name__ == '__main__':
    main()
